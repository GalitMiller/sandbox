{
    "mainTitle": "Bricata ProAccel Central Management Console",

    "loadingUserDataMsg": "Loading User Information...",

    "topNavSettings": "Settings",
    "topNavLogout": "Log out",
    "topNavWelcome": "Welcome %s",

    "generalElements": {
        "cancel": "Cancel",
        "delete": "Delete",
        "create": "Create",
        "clone": "Clone",
        "save": "Save",
        "import": "Import",
        "export": "Export",
        "name": "Name",
        "select": "Select",
        "nextStep": "Next Step",
        "prevStep": "Previous Step"
    },

    "formats": {
      "datePickerFormat": "MM.dd.yyyy",
      "startingDay": "0",
      "showWeekNumbers": "1",
      "gridDateFormat": "MM.DD.YYYY",
      "dateWithTimeFormat": "MM.DD.YYYY / hh:mm a"
    },

    "filter": {
      "showTxt": "Show",
      "createdByTxt": "Created by",
      "dateFilter": "Date",
      "dateFromTxt": "from",
      "dateToTxt": "to",
      "clearTxt": "Clear Filters",
      "emptyFilterResult": "This filter has returned no data matching your criteria",
      "clearFilter": "Clear Filters"
    },

    "policyTypeFilter": {
        "appliedTxt": "Applied",
        "notAppliedTxt": "Not Applied",
        "appliedTxtValue": "Yes",
        "notAppliedTxtValue": "No"
    },

    "policyDetails" : {
        "signaturesLbl": "Signatures",
        "sensorsLbl": "Sensors",
        "descriptionLbl": "Description",
        "searchSignaturesLbl": "Search for Signatures",
        "searchSensorsLbl": "Search for Sensors",
        "hideDetailsLbl": "Hide Detailed Information",
        "appliedPolicyMsg": "Policy activation process continues in the background",
        "cancelApplicationLbl": "Cancel Application",
        "deletedPolicyMsg": "Policy has been successfully deleted",
        "deletedPolicyMsgBulk": "<strong>%s</strong> Policies have been successfully deleted",
        "cancelDeletionLbl": "Undo",
        "createdPolicyMsg": "Policy has been successfully created",
        "editedPolicyMsg": "Policy has been successfully modified",
        "applyCreatedPolicyLbl": "Apply Policy Now",
        "loadingMessage": "Loading Policy Details...",
        "noSignaturesFound": "No Signatures Assigned",
        "noSensorsFound": "No Sensors Applied"
    },

    "common": {
      "closeTxt": "Close",
      "cancelTxt": "Cancel",
      "backTxt": "Back",
      "todayTxt": "Today",
      "clearTxt": "Clear",
      "searchTxt": "Search",
      "allTxt": "All",
      "everyoneTxt": "Anyone",
      "moreDetails": "More details ...",
      "yes": "Yes",
      "no": "No",
      "shownNumber": "__count__ item of %s is shown",
      "shownNumber_plural": "__count__ items of %s are shown",
      "shownNumberMin": "__count__ of %s",
      "shownNumberMin_plural": "__count__ of %s",
      "reference": "File",
      "create": "Create",
      "import": "Import",
      "export": "Export"
    },

    "errors": {
      "commonTitle": "An unexpected error occurred",
      "policyGridDataError": "A policies data loading error occurred. Try your request again.",
      "reloadPolicies": "Reload Policies",
      "policyDetailsDataError": "A policies details loading error occurred. Try your request again.",
      "reloadPolicyDetails": "Reload Policy Details",
      "deletePolicyError": "A policy delete error occurred. Try your request again.",
      "createPolicyError": "A policy create error occurred. Try your request again.",
      "editPolicyError": "A policy edit error occurred. Try your request again.",
      "applyPolicyError": "A policy apply error occurred. Try your request again.",
      "formDataErrorCommonTitle": "Form Data Error",
      "createSignatureError": "A signature create error occurred. Try your request again.",
      "editSignatureError": "A signature edit error occurred. Try your request again.",
      "previewSignatureError": "A signature preview error occurred. Try your request again.",
      "createCategoryError": "A category create error occurred. Try your request again.",
      "importUploadFailedError": "An import upload error occurred. Try your request again.",
      "importUploadNoFileSelectedTitle": "No file selected",
      "importUploadNoFileSelectedMsg": "Please select file to upload.",
      "importUploadFileSizeLimitTitle": "Import Signature",
      "importUploadFileSizeLimitMsg": "The size of rules file is limited to 1Mb",
      "importUploadFileSizeLimitDetail": "Please, Use Command Line Signature Import if you need to import bigger file.",
      "importValidationFailedTitle": "Import Validation Failed",
      "importValidationEmptyNameError": "Rule name can't be empty",
      "importValidationDuplicateNameError": "Rule name '%s' has already been used below",
      "importValidationNoneSelectedError": "Please select at least one rule to be imported",
      "importPartialProcessingTitle": "Import Error",
      "importPartialProcessingError": "%s of %s rules haven't been imported",
      "inactiveSensorsGridDataError": "An inactive sensors data loading error occurred. Try your request again.",
      "reloadInactiveSensors": "Reload Inactive Sensors",
      "sensorActivationError": "A sensor activation error occurred. Try your request again.",
      "signaturesGridDataError": "A signatures data loading error occurred. Try your request again.",
      "reloadSignatures": "Reload Signatures",
      "signatureDetailsDataError": "A signature details loading error occurred. Try your request again.",
      "reloadSignatureDetails": "Reload Signature Details",
      "signatureCategoryDetailsDataError": "A signature category details loading error occurred. Try your request again.",
      "reloadSignatureCategoryDetails": "Reload Signature Category Details",
      "deleteSignatureError": "A signature delete error occurred. Try your request again.",
      "createSignatureCategoryError": "A signature category create error occurred. Try your request again.",
      "editSignatureCategoryError": "A signature category edit error occurred. Try your request again.",
      "createSignatureClassTypeError": "A signature class type create error occurred. Try your request again.",
      "editSignatureClassTypeError": "A signature class type edit error occurred. Try your request again.",
      "deleteSignatureCategoryError": "A signature category delete error occurred. Try your request again.",
      "referenceTypesGridDataError": "A reference types data loading error occurred. Try your request again.",
      "reloadReferenceTypes": "Reload Reference Types",
      "deleteReferenceError": "A reference type delete error occurred. Try your request again.",
      "createReferenceError": "A reference type create error occurred. Try your request again.",
      "editReferenceError": "A reference type edit error occurred. Try your request again.",
      "severitiesGridDataError": "A severities data loading error occurred. Try your request again.",
      "reloadSeverities": "Reload Severities",
      "deleteSeverityError": "A severity delete error occurred. Try your request again.",
      "createSeverityError": "A severity create error occurred. Try your request again.",
      "editSeverityError": "A severity edit error occurred. Try your request again.",
      "signatureClassTypesGridDataError": "A Signature Class Types data loading error occurred. Try your request again.",
      "reloadSignatureClassTypes": "Reload Signature Class Types",
      "deleteSignatureClassTypesError": "A Signature Class Types delete error occurred. Try your request again.",
      "signatureCategoriesLoadingError": "A Signature Categories loading error occurred. Try your request again."
    },

    "validationErrors": {
      "fieldRequired": "This field is required",
      "tooSmall": "This value can't be shorter than %s characters",
      "tooLong": "This value can't be longer than %s characters",
      "incorrectValue": "Entered value isn't correct",
      "noSignaturesSelected": "Please select at least one signature before saving",
      "checkboxesNotSelected": "At least one option must be selected",
      "errorEmptyCompositeInput": "Please fill in all the gaps",
      "ipValueIsEmpty": "Please enter IP",
      "portValueIsEmpty": "Please enter Port",
      "duplicatedReference": "Combination of selected references and entered values should be unique",
      "emptyReferenceValue": "Reference value can't be empty",
      "policyNameNotUnique": "Policy name must be unique",
      "signatureCategoryNameNotUnique": "Signature category name must be unique",
      "signatureSeverityNameNotUnique": "Signature severity name must be unique",
      "signatureClassTypeNameNotUnique": "Signature Class Type name must be unique",
      "sensorActivationTitle": "Sensor Activation Error",
      "sensorActivationNameErr": "Shell Username is required field",
      "sensorActivationPswErr": "Password is required field",
      "referenceTypeNameNotUnique": "Reference type name must be unique",
      "severityNameNotUnique": "Severity name must be unique",
      "signatureClassTypeRanges": "Expect value from 1 to 255"
    },

    "mainNavLinks": {
        "dashboard": "Dashboard",
        "administration": "Administration",
        "sensors": "Sensors",
        "signatures": "Signatures",
        "policies": "Policies",
        "events": "Events",
        "search": "Search"
    },

    "adminButtonLinks": {
        "buttonLabel": "Administration",
        "generalSettings": "General Settings",
        "classifications": "Classifications",
        "sensors": "Sensors",
        "lookupSources": "Lookup Sources",
        "assetNameManager": "Asset Name Manager",
        "severities": "Severities",
        "signatures": "Signatures",
        "users": "Users",
        "workerJobQueue": "Worker & Job Queue"
    },

    "signaturesButtonLinks": {
        "manageGrid": "Signatures",
        "report": "Report",
        "categories": "Categories",
        "classTypes": "Class Types",
        "references": "References",
        "severities": "Severities"
    },

    "policyGrid": {
        "nameCol": "Policy Name",
        "descCol": "Description",
        "signaturesCol": "Signatures",
        "appliedCol": "Last Applied By",
        "createdCol": "Date Created",
        "authorCol": "Created By",
        "actionCol": "Actions",
        "actionClone": "Clone Policy",
        "actionApply": "Apply Policy",
        "actionEdit": "Edit Policy",
        "actionDelete": "Delete Policy",
        "deleteSelected": "Delete Selected Policies"
    },

    "gridFooter" : {
        "recsPerPage": "records per page.",
        "showTxt": "Show:",
        "shownNumber": "__count__ record of %s is shown.",
        "shownNumber_plural": "__count__ records of %s are shown."
    },

    "ipInput": {
        "ip": "IP",
        "port": "Port",
        "anyIp": "Any IP",
        "anyPort": "Any Port",
        "name": "Name",
        "network": "Network"
    },

    "createPolicy": {
        "policiesHeaderMenu": {
            "policiesLbl": "Policies",
            "policiesCount": " (__count__ Policy found)",
            "policiesCount_plural": " (__count__ Policies found)",
            "createPolicy": "Create Policy",
            "applyPolicy": "Apply Policy",
            "classifyPolicies": "Classify Policies",
            "reportGenerator": "Report Generator"
        },
        "mainTitle": "Create Policy",
        "cloneTitle": "Clone Policy",
        "editTitle": "Edit Policy",
        "clonePolicyPrefixAndName": "Copy of %s",
        "mainPolicyInformation": "Policy Main Information",
        "policyName": "Policy Name",
        "description": "Description",
        "hierarchy": "Hierarchy",
        "global": "Global",
        "local": "Local",
        "policyType": "Policy Type",
        "policyTypeEmptyOptionTxt": "Select Policy Type",
        "selectSignaturesHeading": "Select Signatures for the Policy",
        "signatureCategories": "Signature Categories",
        "allLabel": "All",
        "availableSignatures": "Available Signatures",
        "selectedSignatures": "Selected Signatures",
        "noResultsFound": "No Results Found",
        "orYouCanText": "Or you can",
        "addNewSignature": "Add New Signature",
        "previewSignatures": "Preview plain-text rules before saving",
        "selectedSignaturesPreview": "Selected Signatures Preview",
        "noCategoriesAvailable": "No Categories Exist Yet",
        "noCategoriesSelected": "No Categories Selected Yet",
        "noSignaturesSelected": "No Signatures Selected Yet",
        "searchForCategories": "Search for Categories",
        "searchForSignatures": "Search for Signatures",
        "optionsValues": {
            "proAccelCategories": "ProAccel Categories",
            "proAccelAll": "ProAccel All",
            "proAccelHighPolicy": "ProAccel High Policy",
            "ProAccelHighMediumPolicy": "ProAccel High & Medium Policy",
            "proAccelLowPolicy": "ProAccel Low Policy",
            "proAccelCustomPolicy": "ProAccel Custom Policy"
        },
        "AddNewSignatureValues": {
            "pass": "pass",
            "drop": "drop",
            "reject": "reject",
            "alert": "alert",
            "log": "log",
            "activate": "activate",
            "dynamic": "dynamic",
            "sdrop": "sdrop"
        },
        "directions": {
            "unidirectional": "Unidirectional",
            "bidirectional": "Bidirectional"
        },
        "classTypeList" : {
            "attemptedAdmin": "attempted-admin",
            "attemptedUser": "attempted-user",
            "inappropriateContent": "inappropriate-content",
            "policyViolation": "policy-violation",
            "shellcodeDetect": "shellcode-detect",
            "successfulAdmin": "successful-admin",
            "successfulUser": "successful-user",
            "trojanActivity": "trojan-activity",
            "unsuccessfulUser": "unsuccessful-user",
            "webApplicationAttack": "web-application-attack",
            "attemptedDos": "attempted-dos",
            "attemptedRecon": "attempted-recon",
            "badUnknown": "bad-unknown",
            "defaultLoginAttempt": "default-login-attempt",
            "denialOfService": "denial-of-service",
            "miscAttack": "misc-attack",
            "nonStandardProtocol": "non-standard-protocol",
            "rpcPortmapDecode": "rpc-portmap-decode",
            "successfulDos": "successful-dos",
            "successfulReconLargescale": "successful-recon-largescale",
            "successfulReconLimited": "successful-recon-limited",
            "suspiciousFilenameDetect": "suspicious-filename-detect",
            "suspiciousLogin": "suspicious-login",
            "systemCallDetect": "attempted-user",
            "unusualClientPortConnection": "unusual-client-port-connection",
            "webApplicationActivity": "web-application-activity",
            "icmpEvent": "icmp-event",
            "miscActivity": "misc-activity",
            "networkScan": "network-scan",
            "notSuspicious": "not-suspicious",
            "protocolCommandDecode": "protocol-command-decode",
            "stringDetect": "string-detect",
            "unknown": "unknown",
            "tcpConnection": "tcp-connection"
        },
        "policyTypeChangeTitle": "Changing Policy Type",
        "policyTypeChangeMsg": "Changing Policy Type will reset currently selected signatures. Are you sure you want to do this?",
        "policyPreview": {
            "signatureName": "Name",
            "signatureCategory": "Category",
            "signatureSeverity": "Severity"
        },
        "importSignature": "Import Signatures"
    },

    "deletePolicyModal": {
        "deletePolicyTitle": "Delete Policy",
        "deletePolicyTitleBulk": "Delete Policies",
        "deletePolicyMsg": "Are you sure you want to delete <strong>[%s]</strong>?",
        "deletePolicyMsgBulk": "Are you sure you want to delete <strong>%s</strong> policies?"
    },

    "applyPolicyModal": {
        "applyPolicyTitle": "Apply Policy",
        "applyPolicyBtn": "Apply Policy",
        "policyName": "Policy Name",
        "hierarchy": "Hierarchy",
        "hierarchyGlobal": "Global",
        "hierarchyLocal": "Local",
        "name": "Sensor Name",
        "sensorShort": "Sensor",
        "interface": "Interface",
        "deploymentMode": "Deployment Mode",
        "action": "Action",
        "alert": "Alert",
        "block": "Block",
        "log": "Log",
        "deploymentIPS": "IPS",
        "deploymentIDS": "IDS",
        "deploymentOneArm": "One-Arm",
        "errorNoActionSelected": "Please select at least one action",
        "errorDuplicatedPolicies": "Selected policies should be unique",
        "errorDuplicatedInterfaces": "Selected interfaces should be unique",
        "selectPolicyName": "Select Policy Name",
        "selectDeploymentMode": "Select Deployment Mode",
        "changingSensorNotificationTitle": "Changing Sensor",
        "changingSensorNotificationMsg": "You've made changes to the applied policies but have not applied those yet. If change the sensor, then all your modifications will be lost. Do you want to continue?",
        "changingInterfaceNotificationTitle": "Changing Interface",
        "changingInterfaceNotificationMsg": "You've made changes to the applied policies but have not applied those yet. If change the interface, then all your modifications will be lost. Do you want to continue?",
        "selectSensorTitle": "Select Sensors and Interfaces",
        "selectPoliciesTitle": "Select Policies and Actions",
        "sensorsSubTitle": "Sensors and Interfaces",
        "policiesSubTitle": "Policies and Actions",
        "applyForOptionLbl": "Apply for",
        "applyForAll": "All Sensors and Interfaces",
        "applyForCustom": "Specified Sensors and Interfaces",
        "noPoliciesFoundError": "No policies found",
        "noPoliciesFoundErrorDetail": "Create at least one policy to be able to apply it",
        "noSensorsFoundError": "No sensors found",
        "noSensorsFoundErrorDetail": "Configure at least one sensor to be able to apply policies for it",
        "interfacesLoadError": "An interfaces load error occurred",
        "interfacesLoadErrorDetail": "Reopen the dialog and try again",
        "conflictingPoliciesTitle": "Conflicting Policy",
        "conflictingPoliciesTitle_plural": "Conflicting Policies",
        "conflictingPoliciesMsg": "<strong>There is __count__ conflicting policy applied</strong> to the sensors and interfaces that you selected. You will be able to resolve conflicts on the next step.",
        "conflictingPoliciesMsg_plural": "<strong>There are __count__ conflicting policies applied</strong> to the sensors and interfaces that you selected. You will be able to resolve conflicts on the next step.",
        "conflictsAndDiffTitle": "Manage differences and conflicts",
        "noConflictAndDifferenceFound": "<strong>There are no conflicting or different policies applied</strong> to the sensors and interfaces that you selected."
    },

    "createSignature": {
        "createNewSignature": "Create New Signature",
        "rulesInformation": "Rules Information",
        "signatureInformation": "Signature Information",
        "metaInformation": "Meta Information",
        "nextStep": "Next Step",
        "prevStep": "Previous Step",
        "action": "Action",
        "protocol": "Protocol",
        "source": "Source",
        "direction": "Direction",
        "inbound": "Inbound",
        "outbound": "Outbound",
        "destination": "Destination",
        "category": "Category",
        "addNewCategory": "Add New",
        "message": "Message",
        "flowControl": "Flow Control",
        "content": "Content",
        "classType": "Class Type",
        "priority": "Priority",
        "reference": "Reference",
        "type": "Type",
        "value": "Value",
        "revision": "Revision",
        "SID": "SID",
        "GID": "GID",
        "severity": "Severity",
        "selectSeverity": "Select Severity",
        "addNewSeverity": "Add New",
        "previewSignaturesCheckbox": "Preview Signature before saving",
        "keywordInput":
        {
            "dropDownLabel": "Keywords",
            "helpLabel": "Help"
        },
        "previewSignatureTitle": "Preview Signature",
        "editTitle": "Edit Signature",
        "cloneTitle": "Clone Signature",
        "cloneSignaturePrefixAndName": "Copy of %s"
    },

    "signatureCategory": {
        "title": "Create Signature Category",
        "nameLbl": "Name"
    },

    "signatureSeverity": {
        "title": "Create New Severity",
        "nameLbl": "Name",
        "priorityLbl": "Score",
        "bgLbl": "Background Color",
        "txtLbl": "Text Color",
        "preview": "Preview",
        "editTitle": "Edit Severity",
        "priorityDetailsTxt": "Use <strong>1-75</strong> for High Priority, <strong>76-150</strong> for Medium Priority and <strong>151-255</strong> for Low Priority"
    },

    "importSignature": {
        "format": "Format",
        "reference": "Reference",
        "saveSignature": "Save Signature",
        "chooseFileLbl": "Choose File",
        "chooseFilePlaceholder": "No file chosen",
        "suricataFormat": "Suricata",
        "snortFormat": "Snort (not available)",
        "previewRules": "Preview plain-text rules before importing",
        "saveImportedBtnLbl": "Save Signatures",
        "allLabel": "Select All",
        "setForSelected": "Set for selected",
        "generateNames": "Auto Generate Names",
        "categoryName": "Category Name",
        "severityName": "Severity",
        "signatureNamePlaceholder": "Set Signature Name...",
        "invalidRuleMsg": "<strong>This rule is invalid</strong> and will not be imported",
        "prevStep": "Previous Step",
        "parsedNumberMsg": "__count__ of %s rule is parsed successfully:",
        "parsedNumberMsg_plural": "__count__ of %s rules are parsed successfully:",
        "notificationNumberMsg": "__count__ rule has notification",
        "notificationNumberMsg_plural": "__count__ rules have notification",
        "errorNumberMsg": "__count__ rule is invalid",
        "errorNumberMsg_plural": "__count__ rules are invalid",
        "signatureNameLbl": "Name",
        "categoryNameLbl": "Category",
        "severityNameLbl": "Severity",
        "showImportFailureReasonLbl": "Show import failure reason...",
        "addNewCategory": "Add New Category",
        "addNewSeverity": "Add New Severity",
        "editableOptionLbl": "Make Imported Signatures editable",
        "basedOnClassType": "[Based on class type]"
    },

    "inactiveSensorGrid": {
        "headerSensors": "Unmanaged Sensors",
        "headerSensorsCount": " (__count__ Unmanaged Sensor found)",
        "headerSensorsCount_plural": " (__count__ Unmanaged Sensors found)",
        "nameCol": "Sensor Name",
        "hostnameCol": "Hostname/IP",
        "sshPortCol": "SSH Port",
        "actionCol": "Actions",
        "actionActivate": "Activate",
        "activationName": "Shell Username",
        "activationPsw": "Password",
        "activationHide": "Hide",
        "notificationMsg": "<strong>You have __count__ sensor that is not managed by CMC.</strong> It means, that CMC will not be able to perform any actions on sensor, for example, applying policy to it. Click \"Make Manageable\" button to get enable CMC control over it.",
        "notificationMsg_plural": "<strong>You have __count__ sensors that are not managed by CMC.</strong> It means, that CMC will not be able to perform any actions on sensors, for example, applying policy to them. Click \"Make Manageable\" button to get enable CMC control over them.",
        "notificationBtn": "Make Manageable",
        "activationInProgressMessage": "Testing SSH connection and activating sensor. Please wait...",
        "activationSuccessMsg": "The sensor is being activated now.",
        "modalTitle": "Activate [%s] Sensor"
    },

    "signatures": {
        "signaturesHeaderMenu": {
            "signaturesLbl": "Signatures",
            "signaturesCount": " (__count__ Signature found)",
            "signaturesCount_plural": " (__count__ Signatures found)"
        }
    },

    "signaturesGrid": {
        "nameCol": "Signature Name",
        "SIDCol": "SID",
        "severityCol": "Severity",
        "signatureActionCol": "Signature Action",
        "dateCreatedCol": "Date created",
        "createdByCol": "Created By",
        "actionCol": "Actions",
        "actionEdit": "Edit Signature",
        "actionClone": "Clone Signature",
        "actionDelete": "Delete Signature",
        "deleteSelected": "Delete Selected Signatures"
    },

    "signatureDetails" : {
        "loadingMessage": "Loading Signature Details...",
        "descriptionLbl": "Suricata Rule Preview",
        "viewTriggeredEvents": "View Triggered Events",
        "deletedSignatureMsg": "Signature has been successfully deleted",
        "deletedSignatureMsgBulk": "<strong>%s</strong> Signatures have been successfully deleted",
        "cancelDeletionLbl": "Undo",
        "createdSignatureMsg": "Signature has been successfully created",
        "editedSignatureMsg": "Signature has been successfully modified",
        "noEventsFoundMsg": "(No Events Triggered Yet)"
    },

    "deleteSignatureModal": {
        "deleteSignatureTitle": "Delete Signature",
        "deleteSignatureTitleBulk": "Delete Signatures",
        "deleteSignatureMsg": "Are you sure you want to delete <strong>[%s]</strong>?",
        "deleteSignatureMsgBulk": "Are you sure you want to delete <strong>%s</strong> signatures?"
    },

    "signatureLbl": {
        "label_0": "NULL SEVERITY",
        "label_1": "HIGH",
        "label_2": "MEDIUM",
        "label_3": "LOW"
    },

    "signatureCategories": {
        "nameCol": "Category Name",
        "description": "Description",
        "signatures": "Signatures",
        "actionCol": "Actions",
        "actionEdit": "Edit Category",
        "actionDelete": "Delete Category",
        "deleteSelected": "Delete Selected Categories",
        "signatureCategoriesHeaderMenu": {
            "signatureCategoriesLbl": "Signature Categories",
            "signatureCategoriesCount": " (__count__ Category found)",
            "signatureCategoriesCount_plural": " (__count__ Categories found)",
            "createSignatureCategory": "Create Category"
        },
        "details" : {
            "loadingMessage": "Loading Signature Category Details...",
            "signaturesLbl": "Signatures",
            "descriptionLbl": "Description",
            "addSignToTheCategoryLbl": "Add Signature to the Category",
            "addNewSignatureBtn": "Add New Signature",
            "importSignaturesBtn": "Import Signatures",
            "noSignaturesFound": "No Signatures Found",
            "searchSignaturesLbl": "Search for Signatures"
        }
    },

    "createSignatureCategory":{
        "mainTitle": "Create Signature Category",
        "createNewSignatureCategoryName": "Name",
        "createNewSignatureCategoryDescription": "Description",
        "editTitle": "Edit Signature Category",
        "deletedSignatureCategoryMsg": "Signature Category has been successfully deleted",
        "deletedSignatureCategoryMsgBulk": "<strong>%s</strong> Signature Categories have been successfully deleted",
        "createdSignatureCategoryMsg": "Signature Category has been successfully created",
        "editedSignatureCategoryMsg": "Signature Category has been successfully modified"
    },

    "deleteSignatureCategoryModal": {
        "deleteSignatureCatTitle": "Delete Signature category",
        "deleteSignatureCatTitleBulk": "Delete Signature categories",
        "deleteSignatureCatMsg": "Are you sure you want to delete <strong>[%s]</strong>?",
        "deleteSignatureCatMsgBulk": "Are you sure you want to delete <strong>%s</strong> Signature categories?"
    },

    "referenceTypesGrid": {
        "headerMainLbl": "Signature Reference Types",
        "referenceTypesCount": " (__count__ Reference Types found)",
        "referenceTypesCount_plural": " (__count__ Reference Types found)",
        "nameFieldLbl": "Reference Type Name",
        "urlFieldName": "URL Prefix",
        "actionCol": "Actions",
        "actionEdit": "Edit Reference Type",
        "actionDelete": "Delete Reference Type",
        "deleteSelected": "Delete Selected Reference Types",
        "deletedReferenceMsg": "Reference has been successfully deleted",
        "deletedReferenceMsgBulk": "<strong>%s</strong> References have been successfully deleted",
        "createdReferenceMsg": "Reference has been successfully created",
        "editedReferenceMsg": "Reference has been successfully modified",
        "exportDialogTitle": "Export Reference Types",
        "exportAll": "Export All Reference Types",
        "exportSelected": "Export Selected Reference Types",
        "exportSelectedMsg": "There are no reference types selected. Please, select reference types you would like to export.",
        "exportSelectedCount": "There is __count__ selected reference type for export.",
        "exportSelectedCount_plural": "There are __count__ selected reference types for export."
    },

    "importReferenceType": {
        "title": "Import Reference Type"
    },

    "deleteReferenceModal": {
        "deleteReferenceTitle": "Delete Reference",
        "deleteReferenceTitleBulk": "Delete References",
        "deleteReferenceMsg": "Are you sure you want to delete <strong>[%s]</strong>?",
        "deleteReferenceMsgBulk": "Are you sure you want to delete <strong>%s</strong> references?"
    },

    "createReferenceType": {
        "mainTitle": "Create Reference Type",
        "nameLbl": "Name",
        "urlPrefixLbl": "URL Prefix",
        "editTitle": "Edit Reference Type"
    },

    "severitiesGrid": {
        "headerMainLbl": "Severity Settings",
        "severitiesCount": " (__count__ Severities found)",
        "severitiesCount_plural": " (__count__ Severities found)",
        "createSeverity": "Create Severity",
        "nameFieldLbl": "Severity Name",
        "bgFieldLbl": "Background",
        "txtFieldLbl": "Text",
        "previewFieldLbl": "Preview",
        "weightFieldLbl": "Score",
        "signaturesCountFieldLbl": "Signatures Count",
        "actionCol": "Actions",
        "actionEdit": "Edit Severity",
        "actionDelete": "Delete Severity",
        "deleteSelected": "Delete Selected Severities",
        "deletedSeverityMsg": "Severity has been successfully deleted",
        "deletedSeverityMsgBulk": "<strong>%s</strong> Severities have been successfully deleted",
        "createdSeverityMsg": "Severity has been successfully created",
        "editedSeverityMsg": "Severity has been successfully modified",
        "exportDialogTitle": "Export Signatures",
        "exportAll": "Export All Signatures",
        "exportSelected": "Export Selected Signatures",
        "exportSelectedMsg": "There are no signatures selected. Please, select signatures you would like to export.",
        "exportSelectedCount": "There is __count__ selected signature for export.",
        "exportSelectedCount_plural": "There are __count__ selected signatures for export."
    },

    "deleteSeverityModal": {
        "deleteSeverityTitle": "Delete Severity",
        "deleteSeverityTitleBulk": "Delete Severities",
        "deleteSeverityMsg": "Are you sure you want to delete <strong>[%s]</strong>?",
        "deleteSeverityMsgBulk": "Are you sure you want to delete <strong>%s</strong> severities?"
    },

    "signatureClassTypes": {
        "signatureClassTypesLbl": "Signature Class Types",
        "signatureClassTypesCount": " (__count__ Class Type found)",
        "signatureClassTypesCount_plural": " (__count__ Class Types found)",
        "colName": "Class Type Name",
        "colShortName": "Class Type Short Name",
        "colPriority": "Priority",
        "actionCol": "Actions",
        "actionEdit": "Edit Signature Class Type",
        "actionDelete": "Delete Signature Class Type",
        "deleteSelected": "Delete Selected Signature Class Types",
        "deletedSignatureClassTypesMsg": "Signature Class Type has been successfully deleted",
        "deletedSignatureClassTypesMsgBulk": "<strong>%s</strong> Signature Class Types have been successfully deleted",
        "exportDialogTitle": "Export Class Types",
        "exportAll": "Export All Class Types",
        "exportSelected": "Export Selected Class Types",
        "exportSelectedMsg": "There are no class types selected. Please, select class types you would like to export.",
        "exportSelectedCount": "There is __count__ selected class type for export.",
        "exportSelectedCount_plural": "There are __count__ selected class types for export."
    },

    "importClassType": {
        "title": "Import Class Type"
    },

    "deleteSignatureClassTypesModal": {
        "deleteTitle": "Delete Signature Class Type",
        "deleteTitleBulk": "Delete Signature Class Types",
        "deleteMsg": "Are you sure you want to delete <strong>[%s]</strong>?",
        "deleteMsgBulk": "Are you sure you want to delete <strong>%s</strong> Signature Class Types?"
    },

    "createSignatureClassType":{
        "mainTitle": "Create New Class Type",
        "createNewName": "Name",
        "createNewShortName": "Short Name",
        "createNewPriority": "Priority",
        "createNewPriorityRange": "(1-255)",
        "editTitle": "Edit Class Type",
        "createdMsg": "Signature Class Type has been successfully created",
        "editedMsg": "Signature Class Type has been successfully modified"
    }
}
